---
format: gfm
editor: visual
---

```{r}
# Load required packages
library(tidyverse)
library(knitr)
library(nycflights13) # install.packages("nycflights13")

flights |> head() |> kable()
```

```{r}
library(maps) #install.packages("maps")

airports |>
  semi_join(flights, c("faa" = "dest")) |>
  ggplot(aes(lon, lat)) +
    borders("state") +
    geom_point() +
    coord_quickmap()
```

```{r}
avg_dest_delays <-
  flights |>
  group_by(dest) |>
  # arrival delay NA's are cancelled flights
  summarise(delay = mean(arr_delay, na.rm = TRUE)) |>
  inner_join(airports, by = c(dest = "faa"))

avg_dest_delays |>
  ggplot(aes(lon, lat, colour = delay)) +
  borders("state") +
  geom_point() +
  coord_quickmap()
```

```{r}
plane_cohorts <- inner_join(flights,
  select(planes, tailnum, year),
  by = "tailnum",
  suffix = c("_flight", "_plane")
) |>
  mutate(age = year_flight - year_plane) |>
  filter(!is.na(age)) |>
  mutate(age = if_else(age > 25, 25L, age)) |>
  group_by(age) |>
  summarise(
    dep_delay_mean = mean(dep_delay, na.rm = TRUE),
    arr_delay_mean = mean(arr_delay, na.rm = TRUE)
  )
## Departure delays
ggplot(plane_cohorts, aes(x = age, y = dep_delay_mean)) +
  geom_point() +
  scale_x_continuous("Age of plane (years)", breaks = seq(0, 30, by = 10)) +
  scale_y_continuous("Mean Departure Delay (minutes)")

## Arrival delays
ggplot(plane_cohorts, aes(x = age, y = arr_delay_mean)) +
  geom_point() +
  scale_x_continuous("Age of Plane (years)", breaks = seq(0, 30, by = 10)) +
  scale_y_continuous("Mean Arrival Delay (minutes)")
```

```{r}
flight_weather <-
  flights |>
  inner_join(weather, by = c("origin", "year", "month", "day", "hour"))
## Precipitation
flight_weather |>
  group_by(precip) |>
  summarise(delay = mean(dep_delay, na.rm = TRUE)) |>
  ggplot(aes(x = precip, y = delay)) +
  geom_line() + geom_point()
```

```{r}
# Visibility
flight_weather |>
  ungroup() |>
  mutate(visib_cat = cut_interval(visib, n = 10)) |>
  group_by(visib_cat) |>
  summarise(dep_delay = mean(dep_delay, na.rm = TRUE)) |>
  ggplot(aes(x = visib_cat, y = dep_delay)) +
  geom_point()
```

```{r}
# Load required packages
library(babynames) # install.packages("babynames")

babynames |> head() |> kable()
```

```{r}
# number of passengers in the dataset
top_6_names <- babynames |>
  group_by(sex, name) |>
  summarise(total_count=sum(n)) |>
  ungroup() |>
  group_by(sex) |>
  slice_max(order_by = total_count, n = 6)

babynames |>
  semi_join(top_6_names, by = c("sex", "name")) |>
  ggplot(aes(x=year, y=prop, group=name, color=sex)) +
  geom_line() +
  facet_wrap(~name)
```

```{r}
new_names <- babynames |>
  mutate(threshold = ifelse(year >= 2010, "after", "before")) |>
  group_by(name, threshold) |>
  summarise(total_count = sum(n)) |>
  pivot_wider(names_from = threshold, values_from = total_count, names_prefix = "count_") |>
  mutate_all(~replace(., is.na(.), 0)) |>
  filter(count_before == 0, count_after >=1000) 

new_names |> 
  kable()

babynames |>
  filter(name %in% new_names$name) |>
  ggplot(aes(x=year, y=n, color=sex)) +
  geom_line() +
  facet_wrap(~name)
```

```{r}
unisex_names <- babynames |>
  group_by(name, sex) |>
  summarise(total_count = sum(n)) |>
  pivot_wider(names_from = sex, values_from = total_count, names_prefix = "count_") |>
  filter(!is.na(count_M), !is.na(count_F)) |>
  mutate(total_count=count_M+count_F, f_proportion = count_F / total_count) |>
  filter(f_proportion<0.9, f_proportion>0.1) |>
  arrange(-total_count)

unisex_names |>
  head(12) |>
  kable()

unisex_names |>
  head(12) |>
  ggplot(aes(x=count_M, y=count_F)) +
  ggrepel::geom_label_repel(aes(label=name)) +
  geom_point(data=unisex_names)

babynames |>
  filter(name %in% unisex_names$name[1:12]) |>
  pivot_wider(names_from = sex, values_from = c(n, prop)) |>
  mutate_all(~replace(., is.na(.), 0)) |>
  mutate(total_count=n_F+n_M, f_proportion = n_F / total_count, average_popularity = (prop_F + prop_M)/2) |>
  ggplot(aes(year, f_proportion, group=name)) +
  geom_line() +
  geom_point(aes(size = average_popularity)) +
  facet_wrap(~name) +
  ylab("proportion of girls")
```

